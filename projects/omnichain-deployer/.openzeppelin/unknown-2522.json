{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcdC9a3345fE445ac027F2a1bE9dac69d6dFbA3DC",
      "txHash": "0x46ee7968b9e2dcb5c9f111adba73b410f96183433425ff5a46a6e1a59a9d7f5a",
      "kind": "transparent"
    },
    {
      "address": "0x54AcdCAdcE6468c1A128aAf7532a89156eE93AEe",
      "txHash": "0xcc796817dc4b60ec47644f7c409963be99c94cb828b22dff62e6bfcf86bee229",
      "kind": "transparent"
    },
    {
      "address": "0x11e75a8671a6810170a4557cEe844F5B1F47CaB1",
      "txHash": "0xd2aa0eca6464f09a2ea62d22aea7d49d5476842e384490efcc359ee32d77e25a",
      "kind": "transparent"
    },
    {
      "address": "0x8663AB3894dd30B032C9312cD31a074234CbEfE3",
      "txHash": "0x22f1251d098df46d2a20a51ca098d59edc9ec2aedcecd155b7e3d377f0994608",
      "kind": "transparent"
    },
    {
      "address": "0x162443Cfabc9d2244974f3c144c974335030f58a",
      "txHash": "0xecbadaedd0df90faa305c41bcdba16e3fa39f54e04c8d573ddb8b3d733bef512",
      "kind": "transparent"
    },
    {
      "address": "0xCf3D5171661528F65E94B1214adB0D05781a84b6",
      "txHash": "0x3bbbf52e1c92a7c5adfff735bb81b6fa0c0d9621264fadfb154890833f357815",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a6dc2772c973a2290112525d2e08835b68e19befa52ad848b68a24fb520cd855": {
      "address": "0x33Cdce4345E5eF7fe5A6C5F144f1ea894b6b1F48",
      "txHash": "0x2744242ace997d28d4d0c5d1cd98d31c7725bca7241a55564878838909d6b39f",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IInceptionVault_EL)19031",
            "contract": "InceptionToken",
            "src": "contracts/vaults/tokens/InceptionToken.sol:19"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "InceptionToken",
            "src": "contracts/vaults/tokens/InceptionToken.sol:21"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "InceptionToken",
            "src": "contracts/vaults/tokens/InceptionToken.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IInceptionVault_EL)19031": {
            "label": "contract IInceptionVault_EL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8816a9090bfb233ffb3ddd3d2b815b5c0d1f31502be8778c9d4c5a61dd85f40a": {
      "address": "0x31d91472C3b1Fd60Cab3E5585CD36e9aF58245a8",
      "txHash": "0x7df3d7a723bf461644fb363ff9f1b7e4429e81648945fe84b1d5e3732fb2b98d",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "endpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ILayerZeroEndpointV2)677",
            "contract": "OAppCoreUpgradeable",
            "src": "contracts/bridge-lz/LayerZero/OAppCoreUpgradeable.sol:14"
          },
          {
            "label": "peers",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint32,t_bytes32)",
            "contract": "OAppCoreUpgradeable",
            "src": "contracts/bridge-lz/LayerZero/OAppCoreUpgradeable.sol:17"
          },
          {
            "label": "eidToChainId",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "AbstractLZCrossChainAdapter",
            "src": "contracts/bridge-lz/abstract/AbstractLZCrossChainAdapter.sol:28"
          },
          {
            "label": "chainIdToEid",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint32)",
            "contract": "AbstractLZCrossChainAdapter",
            "src": "contracts/bridge-lz/abstract/AbstractLZCrossChainAdapter.sol:29"
          },
          {
            "label": "targetReceiver",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AbstractCrossChainAdapter",
            "src": "contracts/bridge-lz/abstract/AbstractCrossChainAdapter.sol:21"
          },
          {
            "label": "ferry",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IFraxFerry)8572",
            "contract": "AbstractFraxFerryERC20Adapter",
            "src": "contracts/bridge-lz/abstract/AbstractFraxFerryERC20Adapter.sol:20"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC20)3714",
            "contract": "AbstractFraxFerryERC20Adapter",
            "src": "contracts/bridge-lz/abstract/AbstractFraxFerryERC20Adapter.sol:21"
          },
          {
            "label": "erc20DestinationChain",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "AbstractFraxFerryERC20Adapter",
            "src": "contracts/bridge-lz/abstract/AbstractFraxFerryERC20Adapter.sol:22"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "7",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "7",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "58",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_pendingOwner",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:70"
          },
          {
            "label": "_l1ChainId",
            "offset": 0,
            "slot": "158",
            "type": "t_uint32",
            "contract": "FraxFerryLZCrossChainAdapterL2",
            "src": "contracts/bridge-lz/FerryAdapter/FraxFerryLZCrossChainAdapterL2.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3714": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IFraxFerry)8572": {
            "label": "contract IFraxFerry",
            "numberOfBytes": "20"
          },
          "t_contract(ILayerZeroEndpointV2)677": {
            "label": "contract ILayerZeroEndpointV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_bytes32)": {
            "label": "mapping(uint32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2a7695d9a2a8c6a958892fa6e2c0ed9ad126bc9eb23ad03e17d0705d3d486db0": {
      "address": "0x8d8eE4053d3D540FF4129b338668cE81c849105F",
      "txHash": "0x30070a050ce73e5f9486201da1ae7ef5e92908c76d43076b14a36c281e53384a",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_pendingOwner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Ownable2StepUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:70"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20)8697",
            "contract": "InceptionERC20OmniAssetsHandler",
            "src": "contracts/vaults/assets-handler/InceptionERC20OmniAssetsHandler.sol:24"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionERC20OmniAssetsHandler",
            "src": "contracts/vaults/assets-handler/InceptionERC20OmniAssetsHandler.sol:26"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IInceptionToken)18524",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:24"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:27"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:30"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:32"
          },
          {
            "label": "ratioFeed",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IInceptionRatioFeed)18487",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:34"
          },
          {
            "label": "crossChainAdapterERC20",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IERC20CrossChainBridge)17570",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:36"
          },
          {
            "label": "depositBonusAmount",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:45"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:46"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:48"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "309",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:49"
          },
          {
            "label": "maxBonusRate",
            "offset": 0,
            "slot": "310",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:52"
          },
          {
            "label": "optimalBonusRate",
            "offset": 8,
            "slot": "310",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:53"
          },
          {
            "label": "depositUtilizationKink",
            "offset": 16,
            "slot": "310",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:54"
          },
          {
            "label": "maxFlashFeeRate",
            "offset": 24,
            "slot": "310",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:57"
          },
          {
            "label": "optimalWithdrawalRate",
            "offset": 0,
            "slot": "311",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:58"
          },
          {
            "label": "withdrawUtilizationKink",
            "offset": 8,
            "slot": "311",
            "type": "t_uint64",
            "contract": "InceptionERC20OmniVault",
            "src": "contracts/vaults/vaults/InceptionERC20OmniVault.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)8697": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20CrossChainBridge)17570": {
            "label": "contract IERC20CrossChainBridge",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionRatioFeed)18487": {
            "label": "contract IInceptionRatioFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)18524": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
