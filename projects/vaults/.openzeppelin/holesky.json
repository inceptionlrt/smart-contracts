{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xF634bCddFCB5F02b1E4Cd8A9057069ca24884fE2",
      "txHash": "0xe166e8c98dacf97f05ce48ef8360534340966b8b4b559aea67fedaf5eda35fc8",
      "kind": "transparent"
    },
    {
      "address": "0x838a7fe80f1AF808Bc5ad0f9B1AC6e26B2475E17",
      "txHash": "0x62df2485582666c14641755701de1b43e62046c428cc37ac9d494eb4c0d41c92",
      "kind": "transparent"
    },
    {
      "address": "0xD7071dBeCaFF193287f1A3054825381208369106",
      "txHash": "0xe3d3f33ce7a869b26e7857be85f143394f6f49ade587ff3d0f8b77e510c9c540",
      "kind": "transparent"
    },
    {
      "address": "0x4267Cf4df74C5cBDC2E97F0633f2caBFe9F999F2",
      "txHash": "0xe41bded088562963df99d7d77c147acd743f902b1d6d10fa866e7f9e506eaa15",
      "kind": "transparent"
    },
    {
      "address": "0x7f4F6932eeFF2C2d23231718CB2c57Cf1EEB4b96",
      "txHash": "0xa03b954abdd39d999b748c9d21d01e03bdd653b7ee95aa20e3535106fa4c2d23",
      "kind": "transparent"
    },
    {
      "address": "0x999a77AD40ab32d226f2270dd6E677e8F2Ea79C9",
      "txHash": "0xbfbf99ad2bf93b9a57005b87036ca90cb020be64eac6f573a50d502f516d8d24",
      "kind": "transparent"
    },
    {
      "address": "0x34f90E4Ca80906B5770863aD1D9E661B4dB65da9",
      "txHash": "0x9224508993a408cd3bfd98c692a58fefc7bb55650b769a0119f8df3e1b562db1",
      "kind": "transparent"
    },
    {
      "address": "0xDc4c9339247cb3f64cdd46e80a0b89bD08c0C734",
      "txHash": "0x32354eac45cb6c55ff5e03eb95a60b3af3a98d6b71dab5a256c842857e1152e3",
      "kind": "transparent"
    },
    {
      "address": "0xF50d71D2ac188CA6632625de3d61128827e84673",
      "txHash": "0x7354882b934b24ca3d75c80d3ade1bd285614770215ed0eba0c45896c47ec5e2",
      "kind": "transparent"
    },
    {
      "address": "0xb64183373e60Dd42015d8fC637Fa7514A3E5CD10",
      "txHash": "0x4e01d9a9726a121f0c6f485d3c3592d4c02c2787bb7458e45706858bc9fa9b5e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bb2f036c71351a31b30593bbaf8c39691853adf68414cfd452b7ca3b874ee60d": {
      "address": "0x9c9C5E38422FC486aAEC1159d482FfAddd023613",
      "txHash": "0x8bb95ccc36594bedadb67642e666577ebbde16554294082acf0b75a3d662fb47",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "vault",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IInceptionVault)9748",
            "contract": "InceptionToken",
            "src": "contracts/Inception/tokens/InceptionToken.sol:19"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "151",
            "type": "t_bool",
            "contract": "InceptionToken",
            "src": "contracts/Inception/tokens/InceptionToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IInceptionVault)9748": {
            "label": "contract IInceptionVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "632880b36e8e593acf854fffd98b306ea63b4672f56c1436ec44932a138a4fa2": {
      "address": "0xf6B63D4d1791ACcf67d3e46082B5c1efC1A68c38",
      "txHash": "0x09d09ec83cd5fe9190c96f163d382b3993e525debbe3c8a66521935ae7fd6800",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)3897",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:26"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:28"
          },
          {
            "label": "strategyManager",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStrategyManager)10139",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:16"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IStrategy)9938",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:17"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:19"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:22"
          },
          {
            "label": "totalAmountToWithdraw",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:26"
          },
          {
            "label": "_pendingWithdrawalAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:30"
          },
          {
            "label": "delegationManager",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDelegationManager)9458",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:32"
          },
          {
            "label": "claimerWithdrawalsQueue",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(Withdrawal)9479_storage)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:34"
          },
          {
            "label": "redeemReservedAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:40"
          },
          {
            "label": "_operatorRestakers",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_address)",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:43"
          },
          {
            "label": "restakers",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_address)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:44"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)39_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:47"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IInceptionToken)9644",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:19"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:22"
          },
          {
            "label": "_claimerWithdrawals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Withdrawal)9479_storage)",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:24"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:27"
          },
          {
            "label": "_stakerImplementation",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Withdrawal)9479_storage)dyn_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)39_storage": {
            "label": "uint256[39]",
            "numberOfBytes": "1248"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IDelegationManager)9458": {
            "label": "contract IDelegationManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3897": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)9644": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategy)9938": {
            "label": "contract IStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategyManager)10139": {
            "label": "contract IStrategyManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Withdrawal)9479_storage)": {
            "label": "mapping(address => struct IEigenLayerHandler.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Withdrawal)9479_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "28439aaa3ae375de38451fd9940473ed11d69dd6367376602349cfadd5f786c1": {
      "address": "0x8298545e25DA9B7e34ac00E3E9f1ce927d80666e",
      "txHash": "0x9855a1f7508bac43a8bb914064d0119c5db6393d5c95a44ba93be0f0244cb29f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1436",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:27"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:29"
          },
          {
            "label": "strategyManager",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStrategyManager)6399",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:16"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IStrategy)6198",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:17"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:19"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:22"
          },
          {
            "label": "totalAmountToWithdraw",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:26"
          },
          {
            "label": "_pendingWithdrawalAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:30"
          },
          {
            "label": "delegationManager",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDelegationManager)5706",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:32"
          },
          {
            "label": "claimerWithdrawalsQueue",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(Withdrawal)5717_storage)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:34"
          },
          {
            "label": "redeemReservedAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:40"
          },
          {
            "label": "_operatorRestakers",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_address)",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:43"
          },
          {
            "label": "restakers",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_address)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:44"
          },
          {
            "label": "depositBonusAmount",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:46"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:47"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)37_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:50"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IInceptionToken)5889",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:18"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:21"
          },
          {
            "label": "_claimerWithdrawals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Withdrawal)5717_storage)",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:23"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:26"
          },
          {
            "label": "_stakerImplementation",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:29"
          },
          {
            "label": "ratioFeed",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IInceptionRatioFeed)5782",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:38"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:39"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "307",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:40"
          },
          {
            "label": "maxBonusRate",
            "offset": 0,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:43"
          },
          {
            "label": "optimalBonusRate",
            "offset": 8,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:44"
          },
          {
            "label": "depositUtilizationKink",
            "offset": 16,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:45"
          },
          {
            "label": "maxFlashFeeRate",
            "offset": 24,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:48"
          },
          {
            "label": "optimalWithdrawalRate",
            "offset": 0,
            "slot": "309",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:49"
          },
          {
            "label": "withdrawUtilizationKink",
            "offset": 8,
            "slot": "309",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Withdrawal)5717_storage)dyn_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)37_storage": {
            "label": "uint256[37]",
            "numberOfBytes": "1184"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IDelegationManager)5706": {
            "label": "contract IDelegationManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1436": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionRatioFeed)5782": {
            "label": "contract IInceptionRatioFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)5889": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategy)6198": {
            "label": "contract IStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategyManager)6399": {
            "label": "contract IStrategyManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Withdrawal)5717_storage)": {
            "label": "mapping(address => struct IEigenLayerHandler.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Withdrawal)5717_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c2d72be6e6e52a760f448181fbca130f0f50451a4d90a711f4e18ea3a956b414": {
      "address": "0x3f80613bB708E399D771cC8057A226DF833743CA",
      "txHash": "0xacbae1f7738e660b6bd2895286a85f20542e80b68e0afc4ab2bd6e3b48783d77",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20)1436",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:27"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/Inception/assets-handler/InceptionAssetsHandler.sol:29"
          },
          {
            "label": "strategyManager",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStrategyManager)6419",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:16"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IStrategy)6218",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:17"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:19"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:22"
          },
          {
            "label": "totalAmountToWithdraw",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:26"
          },
          {
            "label": "_pendingWithdrawalAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:30"
          },
          {
            "label": "delegationManager",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(IDelegationManager)5726",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:32"
          },
          {
            "label": "claimerWithdrawalsQueue",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(Withdrawal)5737_storage)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:34"
          },
          {
            "label": "redeemReservedAmount",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:40"
          },
          {
            "label": "_operatorRestakers",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_address)",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:43"
          },
          {
            "label": "restakers",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_address)dyn_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:44"
          },
          {
            "label": "depositBonusAmount",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:46"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:49"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)37_storage",
            "contract": "EigenLayerHandler",
            "src": "contracts/Inception/eigenlayer-handler/EigenLayerHandler.sol:54"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IInceptionToken)5909",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:18"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "302",
            "type": "t_uint256",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:21"
          },
          {
            "label": "_claimerWithdrawals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Withdrawal)5737_storage)",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:23"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:26"
          },
          {
            "label": "_stakerImplementation",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:29"
          },
          {
            "label": "ratioFeed",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IInceptionRatioFeed)5802",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:38"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:39"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "307",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:40"
          },
          {
            "label": "maxBonusRate",
            "offset": 0,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:43"
          },
          {
            "label": "optimalBonusRate",
            "offset": 8,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:44"
          },
          {
            "label": "depositUtilizationKink",
            "offset": 16,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:45"
          },
          {
            "label": "maxFlashFeeRate",
            "offset": 24,
            "slot": "308",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:48"
          },
          {
            "label": "optimalWithdrawalRate",
            "offset": 0,
            "slot": "309",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:49"
          },
          {
            "label": "withdrawUtilizationKink",
            "offset": 8,
            "slot": "309",
            "type": "t_uint64",
            "contract": "InceptionVault",
            "src": "contracts/Inception/vaults/InceptionVault.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Withdrawal)5737_storage)dyn_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)37_storage": {
            "label": "uint256[37]",
            "numberOfBytes": "1184"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IDelegationManager)5726": {
            "label": "contract IDelegationManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1436": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionRatioFeed)5802": {
            "label": "contract IInceptionRatioFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)5909": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategy)6218": {
            "label": "contract IStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategyManager)6419": {
            "label": "contract IStrategyManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Withdrawal)5737_storage)": {
            "label": "mapping(address => struct IEigenLayerHandler.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Withdrawal)5737_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "35d0772e9054e486e8635a2a2bef202af16c38e574ba4aff6ab50fd2be2e4d2b": {
      "address": "0x0F3d11bA333BA8B265D77bde14009BB4e585B8C9",
      "txHash": "0x6233dda0c153981e500fc665e1e860a710dfac7b8c20d6737bc36bdcf0dcb730",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "vault",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IInceptionVault)1572",
            "contract": "InceptionToken",
            "src": "contracts/tokens/InceptionToken.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "0",
            "type": "t_bool",
            "contract": "InceptionToken",
            "src": "contracts/tokens/InceptionToken.sol:22"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "InceptionToken",
            "src": "contracts/tokens/InceptionToken.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)179_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IInceptionVault)1572": {
            "label": "contract IInceptionVault",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e918f2d9e908adcc639df1f1c9397df5076eee56fb7cf2b963fb8a70f50cd08c": {
      "address": "0xAE0112546b96CFA4E8cc30E87f347CA4Bb3bDD83",
      "txHash": "0x59e652b55562875bc3a0717800a9000fa7acc4ded5b839681831578d69735ce4",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1523",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/assets-handler/InceptionAssetsHandler.sol:27"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/assets-handler/InceptionAssetsHandler.sol:29"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:22"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:24"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:27"
          },
          {
            "label": "totalAmountToWithdraw",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:31"
          },
          {
            "label": "_pendingWithdrawalAmount",
            "offset": 0,
            "slot": "54",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:35"
          },
          {
            "label": "claimerWithdrawalsQueue",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_struct(Withdrawal)3023_storage)dyn_storage",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:37"
          },
          {
            "label": "redeemReservedAmount",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:43"
          },
          {
            "label": "depositBonusAmount",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:49"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:52"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_uint256)37_storage",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:57"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "96",
            "type": "t_contract(IInceptionToken)3268",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:20"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "97",
            "type": "t_uint256",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:23"
          },
          {
            "label": "_claimerWithdrawals",
            "offset": 0,
            "slot": "98",
            "type": "t_mapping(t_address,t_struct(Withdrawal)3023_storage)",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:25"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "99",
            "type": "t_string_storage",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:28"
          },
          {
            "label": "_stakerImplementation",
            "offset": 0,
            "slot": "100",
            "type": "t_address",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:31"
          },
          {
            "label": "ratioFeed",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IInceptionRatioFeed)3146",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:40"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:41"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:42"
          },
          {
            "label": "maxBonusRate",
            "offset": 0,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:45"
          },
          {
            "label": "optimalBonusRate",
            "offset": 8,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:46"
          },
          {
            "label": "depositUtilizationKink",
            "offset": 16,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:47"
          },
          {
            "label": "maxFlashFeeRate",
            "offset": 24,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:50"
          },
          {
            "label": "optimalWithdrawalRate",
            "offset": 0,
            "slot": "104",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:51"
          },
          {
            "label": "withdrawUtilizationKink",
            "offset": 8,
            "slot": "104",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)242_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)319_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Withdrawal)3023_storage)dyn_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)37_storage": {
            "label": "uint256[37]",
            "numberOfBytes": "1184"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_contract(IERC20)1523": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionRatioFeed)3146": {
            "label": "contract IInceptionRatioFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)3268": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Withdrawal)3023_storage)": {
            "label": "mapping(address => struct IEigenLayerHandler.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Withdrawal)3023_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9e1d1cc5fdb27630525cae1e42981f6f9972292da42c6f6324ab33802efb1a2a": {
      "address": "0x05C145F54F8CE9bA0b5f17B518aacbfa79425F71",
      "txHash": "0x35b3db51138060538bb9c46fce8590c2215c24561f7e91b84e552df8e7be0b20",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_asset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1523",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/assets-handler/InceptionAssetsHandler.sol:27"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)49_storage",
            "contract": "InceptionAssetsHandler",
            "src": "contracts/assets-handler/InceptionAssetsHandler.sol:29"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:22"
          },
          {
            "label": "epoch",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:24"
          },
          {
            "label": "_operator",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:27"
          },
          {
            "label": "totalAmountToWithdraw",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:31"
          },
          {
            "label": "_pendingWithdrawalAmount",
            "offset": 0,
            "slot": "54",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:35"
          },
          {
            "label": "claimerWithdrawalsQueue",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_struct(Withdrawal)3023_storage)dyn_storage",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:37"
          },
          {
            "label": "redeemReservedAmount",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:43"
          },
          {
            "label": "depositBonusAmount",
            "offset": 0,
            "slot": "57",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:49"
          },
          {
            "label": "targetCapacity",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:52"
          },
          {
            "label": "__reserver",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_uint256)37_storage",
            "contract": "EigenLayerHandlerMock",
            "src": "contracts/eigenlayer-handler/EigenLayerHandlerMock.sol:57"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "96",
            "type": "t_contract(IInceptionToken)3268",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:20"
          },
          {
            "label": "minAmount",
            "offset": 0,
            "slot": "97",
            "type": "t_uint256",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:23"
          },
          {
            "label": "_claimerWithdrawals",
            "offset": 0,
            "slot": "98",
            "type": "t_mapping(t_address,t_struct(Withdrawal)3023_storage)",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:25"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "99",
            "type": "t_string_storage",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:28"
          },
          {
            "label": "_stakerImplementation",
            "offset": 0,
            "slot": "100",
            "type": "t_address",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:31"
          },
          {
            "label": "ratioFeed",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IInceptionRatioFeed)3146",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:40"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:41"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:42"
          },
          {
            "label": "maxBonusRate",
            "offset": 0,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:45"
          },
          {
            "label": "optimalBonusRate",
            "offset": 8,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:46"
          },
          {
            "label": "depositUtilizationKink",
            "offset": 16,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:47"
          },
          {
            "label": "maxFlashFeeRate",
            "offset": 24,
            "slot": "103",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:50"
          },
          {
            "label": "optimalWithdrawalRate",
            "offset": 0,
            "slot": "104",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:51"
          },
          {
            "label": "withdrawUtilizationKink",
            "offset": 8,
            "slot": "104",
            "type": "t_uint64",
            "contract": "InceptionVaultMock",
            "src": "contracts/vaults/InceptionVaultMock.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)242_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)319_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Withdrawal)3023_storage)dyn_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)37_storage": {
            "label": "uint256[37]",
            "numberOfBytes": "1184"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_contract(IERC20)1523": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionRatioFeed)3146": {
            "label": "contract IInceptionRatioFeed",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)3268": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Withdrawal)3023_storage)": {
            "label": "mapping(address => struct IEigenLayerHandler.Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Withdrawal)3023_storage": {
            "label": "struct IEigenLayerHandler.Withdrawal",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "36f742ba83854f034c158be40e898bbdf9bc84bdfe9520b7f390ebaac8620db6": {
      "address": "0xA8410B4E6EE9F3Ef8872c82DD84af3700f2CAA02",
      "txHash": "0xe14b77eaa6c431ebaf72bc6074105de7a085241820486ec4ca1e31c3ac78240c",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "underlyingAsset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)975",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:27"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IInceptionToken)1907",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:28"
          },
          {
            "label": "lockBox",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:29"
          },
          {
            "label": "inceptionVault",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IInceptionVault)2081",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:30"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:32"
          },
          {
            "label": "lastTx",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Transaction)2090_storage",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:34"
          },
          {
            "label": "defaultAdapter",
            "offset": 0,
            "slot": "8",
            "type": "t_address_payable",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:36"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:37"
          },
          {
            "label": "assetInfoTxMaxDelay",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_contract(IERC20)975": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)1907": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionVault)2081": {
            "label": "contract IInceptionVault",
            "numberOfBytes": "20"
          },
          "t_struct(Transaction)2090_storage": {
            "label": "struct IRebalancer.Transaction",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "underlyingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inceptionTokenSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "78cb3296ca4a039ef24b27ec025ead40bddf9ac74f075cbeb804b0e740bf3935": {
      "address": "0x12489a8A50e29cf30937C11077946E4a88bcEF74",
      "txHash": "0xd700b15a7bcbec56cfb980fa35feb1cb6dc1a2dc22c7991283d9807122af3b3a",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "underlyingAsset",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)975",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:27"
          },
          {
            "label": "inceptionToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IInceptionToken)1907",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:28"
          },
          {
            "label": "lockBox",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:29"
          },
          {
            "label": "inceptionVault",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IInceptionVault)2081",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:30"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:32"
          },
          {
            "label": "lastTx",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Transaction)2090_storage",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:34"
          },
          {
            "label": "defaultAdapter",
            "offset": 0,
            "slot": "8",
            "type": "t_address_payable",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:36"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:37"
          },
          {
            "label": "assetInfoTxMaxDelay",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC20RebalancerStorage",
            "src": "contracts/rebalancer/ERC20RebalancerStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)14_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)74_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_contract(IERC20)975": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionToken)1907": {
            "label": "contract IInceptionToken",
            "numberOfBytes": "20"
          },
          "t_contract(IInceptionVault)2081": {
            "label": "contract IInceptionVault",
            "numberOfBytes": "20"
          },
          "t_struct(Transaction)2090_storage": {
            "label": "struct IRebalancer.Transaction",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "underlyingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inceptionTokenSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
